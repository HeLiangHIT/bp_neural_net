
clear all; clc; close all;
%% 训练数据初始化
vecLen=3;%特征维度
sampleN=10;%各类样本数据个数
raw_data = [1.58	2.32	-5.8	0.21	0.03	-2.21	-1.54	1.17	0.64;%第一类3特征，第二类3特征，第三类3特征
    0.67	1.58	-4.78	0.37	0.28	-1.8	5.41	3.45	-1.33;
    1.04	1.01	-3.63	0.18	1.22	0.16	1.55	0.99	2.69;
    -1.49	2.18	-3.39	-0.24	0.93	-1.01	1.86	3.19	1.51;
    -0.41	1.21	-4.73	-1.18	0.39	-0.39	1.68	1.79	-0.87;
    1.39	3.16	2.87	0.74	0.96	-1.16	3.51	-0.22	-1.39;
    1.20	1.40	-1.89	-0.38	1.94	-0.48	1.40	-0.44	0.92;
    -0.92	1.44	-3.22	0.02	0.72	-0.17	0.44	0.83	1.97;
    0.45	1.33	-4.38	0.44	1.31	-0.14	0.25	0.68	-0.99;
    -0.76	0.84	-1.96	0.46	1.49	0.68	-0.66	-0.45	0.08]';
Xin=reshape(raw_data(:),vecLen,[])';%分类1、2、3、1、2、3...
Yd=repmat(eye(3),sampleN,1);%理想输出
Yd_ind = repmat([1:3]',sampleN,1);%理想输出

%% 产生神经网络
net = newff([-5,5;-5,5;-5,5],[3,4,3],{'tansig','tansig','tansig'});
net.trainParam.epochs = 100000; %训练的最大次数
net.trainParam.goal = 0.03; %全局最小误差

%% 训练样本
net1=train(net,Xin',Yd');
%% 识别样本
yo1 = sim(net1,Xin');
[~,yo1] = max(yo1',[],2);
per1 = sum(yo1(:) ~=Yd_ind(:))/length(Yd_ind(:))
